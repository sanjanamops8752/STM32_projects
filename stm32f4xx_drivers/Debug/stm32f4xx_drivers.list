
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000428  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005d0  080005d8  000105d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005d0  080005d0  000105d8  2**0
                  CONTENTS
  4 .ARM          00000000  080005d0  080005d0  000105d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005d0  080005d8  000105d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005d0  080005d0  000105d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005d4  080005d4  000105d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000105d8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000105d8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a92  00000000  00000000  00010608  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002af  00000000  00000000  0001109a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00011350  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  00011410  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001297  00000000  00000000  000114a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000bd5  00000000  00000000  0001273f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004c8f  00000000  00000000  00013314  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00017fa3  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000244  00000000  00000000  00017ff4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080005b8 	.word	0x080005b8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080005b8 	.word	0x080005b8

080001e8 <delay>:
#include "stm32f4xx.h"
#include "stm32f407xx_gpio_driver.h"

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000 ; i ++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	0007a11f 	.word	0x0007a11f

08000214 <main>:


int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOD;
 800021a:	4b0d      	ldr	r3, [pc, #52]	; (8000250 <main+0x3c>)
 800021c:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800021e:	230c      	movs	r3, #12
 8000220:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000226:	2302      	movs	r3, #2
 8000228:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 800022a:	2301      	movs	r3, #1
 800022c:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800022e:	2300      	movs	r3, #0
 8000230:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4806      	ldr	r0, [pc, #24]	; (8000250 <main+0x3c>)
 8000236:	f000 f837 	bl	80002a8 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 800023a:	1d3b      	adds	r3, r7, #4
 800023c:	4618      	mov	r0, r3
 800023e:	f000 f8b9 	bl	80003b4 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 8000242:	210c      	movs	r1, #12
 8000244:	4802      	ldr	r0, [pc, #8]	; (8000250 <main+0x3c>)
 8000246:	f000 f97d 	bl	8000544 <GPIO_ToggleOutputPin>
		delay();
 800024a:	f7ff ffcd 	bl	80001e8 <delay>
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 800024e:	e7f8      	b.n	8000242 <main+0x2e>
 8000250:	40020c00 	.word	0x40020c00

08000254 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000254:	480d      	ldr	r0, [pc, #52]	; (800028c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000256:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000258:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800025c:	480c      	ldr	r0, [pc, #48]	; (8000290 <LoopForever+0x6>)
  ldr r1, =_edata
 800025e:	490d      	ldr	r1, [pc, #52]	; (8000294 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000260:	4a0d      	ldr	r2, [pc, #52]	; (8000298 <LoopForever+0xe>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000264:	e002      	b.n	800026c <LoopCopyDataInit>

08000266 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000266:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000268:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026a:	3304      	adds	r3, #4

0800026c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800026c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000270:	d3f9      	bcc.n	8000266 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000274:	4c0a      	ldr	r4, [pc, #40]	; (80002a0 <LoopForever+0x16>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000278:	e001      	b.n	800027e <LoopFillZerobss>

0800027a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800027c:	3204      	adds	r2, #4

0800027e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000280:	d3fb      	bcc.n	800027a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000282:	f000 f975 	bl	8000570 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000286:	f7ff ffc5 	bl	8000214 <main>

0800028a <LoopForever>:

LoopForever:
  b LoopForever
 800028a:	e7fe      	b.n	800028a <LoopForever>
  ldr   r0, =_estack
 800028c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000290:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000294:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000298:	080005d8 	.word	0x080005d8
  ldr r2, =_sbss
 800029c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a0:	2000001c 	.word	0x2000001c

080002a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a4:	e7fe      	b.n	80002a4 <ADC_IRQHandler>
	...

080002a8 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002a8:	b480      	push	{r7}
 80002aa:	b083      	sub	sp, #12
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
 80002b0:	460b      	mov	r3, r1
 80002b2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002b4:	78fb      	ldrb	r3, [r7, #3]
 80002b6:	2b01      	cmp	r3, #1
 80002b8:	d161      	bne.n	800037e <GPIO_PeriClockControl+0xd6>
	{
		if(pGPIOx == GPIOA)
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	4a33      	ldr	r2, [pc, #204]	; (800038c <GPIO_PeriClockControl+0xe4>)
 80002be:	4293      	cmp	r3, r2
 80002c0:	d106      	bne.n	80002d0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002c2:	4b33      	ldr	r3, [pc, #204]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 80002c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c6:	4a32      	ldr	r2, [pc, #200]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 80002c8:	f043 0301 	orr.w	r3, r3, #1
 80002cc:	6313      	str	r3, [r2, #48]	; 0x30
	else
	{
		//
	}

}
 80002ce:	e056      	b.n	800037e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOB)
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	4a30      	ldr	r2, [pc, #192]	; (8000394 <GPIO_PeriClockControl+0xec>)
 80002d4:	4293      	cmp	r3, r2
 80002d6:	d106      	bne.n	80002e6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002d8:	4b2d      	ldr	r3, [pc, #180]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 80002da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002dc:	4a2c      	ldr	r2, [pc, #176]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 80002de:	f043 0302 	orr.w	r3, r3, #2
 80002e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e4:	e04b      	b.n	800037e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOC)
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4a2b      	ldr	r2, [pc, #172]	; (8000398 <GPIO_PeriClockControl+0xf0>)
 80002ea:	4293      	cmp	r3, r2
 80002ec:	d106      	bne.n	80002fc <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002ee:	4b28      	ldr	r3, [pc, #160]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 80002f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f2:	4a27      	ldr	r2, [pc, #156]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 80002f4:	f043 0304 	orr.w	r3, r3, #4
 80002f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fa:	e040      	b.n	800037e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOD)
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	4a27      	ldr	r2, [pc, #156]	; (800039c <GPIO_PeriClockControl+0xf4>)
 8000300:	4293      	cmp	r3, r2
 8000302:	d106      	bne.n	8000312 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000304:	4b22      	ldr	r3, [pc, #136]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 8000306:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000308:	4a21      	ldr	r2, [pc, #132]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 800030a:	f043 0308 	orr.w	r3, r3, #8
 800030e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000310:	e035      	b.n	800037e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOE)
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a22      	ldr	r2, [pc, #136]	; (80003a0 <GPIO_PeriClockControl+0xf8>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d106      	bne.n	8000328 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800031a:	4b1d      	ldr	r3, [pc, #116]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 800031c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031e:	4a1c      	ldr	r2, [pc, #112]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 8000320:	f043 0310 	orr.w	r3, r3, #16
 8000324:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000326:	e02a      	b.n	800037e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOF)
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4a1e      	ldr	r2, [pc, #120]	; (80003a4 <GPIO_PeriClockControl+0xfc>)
 800032c:	4293      	cmp	r3, r2
 800032e:	d106      	bne.n	800033e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000330:	4b17      	ldr	r3, [pc, #92]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 8000332:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000334:	4a16      	ldr	r2, [pc, #88]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 8000336:	f043 0320 	orr.w	r3, r3, #32
 800033a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033c:	e01f      	b.n	800037e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOG)
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a19      	ldr	r2, [pc, #100]	; (80003a8 <GPIO_PeriClockControl+0x100>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000346:	4b12      	ldr	r3, [pc, #72]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034a:	4a11      	ldr	r2, [pc, #68]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 800034c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000350:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000352:	e014      	b.n	800037e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOH)
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a15      	ldr	r2, [pc, #84]	; (80003ac <GPIO_PeriClockControl+0x104>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d106      	bne.n	800036a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800035c:	4b0c      	ldr	r3, [pc, #48]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 800035e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000360:	4a0b      	ldr	r2, [pc, #44]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 8000362:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000366:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000368:	e009      	b.n	800037e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOI)
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a10      	ldr	r2, [pc, #64]	; (80003b0 <GPIO_PeriClockControl+0x108>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d105      	bne.n	800037e <GPIO_PeriClockControl+0xd6>
			GPIOI_PCLK_EN();
 8000372:	4b07      	ldr	r3, [pc, #28]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000376:	4a06      	ldr	r2, [pc, #24]	; (8000390 <GPIO_PeriClockControl+0xe8>)
 8000378:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800037c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037e:	bf00      	nop
 8000380:	370c      	adds	r7, #12
 8000382:	46bd      	mov	sp, r7
 8000384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000388:	4770      	bx	lr
 800038a:	bf00      	nop
 800038c:	40020000 	.word	0x40020000
 8000390:	40023800 	.word	0x40023800
 8000394:	40020400 	.word	0x40020400
 8000398:	40020800 	.word	0x40020800
 800039c:	40020c00 	.word	0x40020c00
 80003a0:	40021000 	.word	0x40021000
 80003a4:	40021400 	.word	0x40021400
 80003a8:	40021800 	.word	0x40021800
 80003ac:	40021c00 	.word	0x40021c00
 80003b0:	40022000 	.word	0x40022000

080003b4 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003b4:	b580      	push	{r7, lr}
 80003b6:	b084      	sub	sp, #16
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 80003bc:	2300      	movs	r3, #0
 80003be:	60fb      	str	r3, [r7, #12]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	2101      	movs	r1, #1
 80003c6:	4618      	mov	r0, r3
 80003c8:	f7ff ff6e 	bl	80002a8 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	795b      	ldrb	r3, [r3, #5]
 80003d0:	2b03      	cmp	r3, #3
 80003d2:	d81f      	bhi.n	8000414 <GPIO_Init+0x60>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	795b      	ldrb	r3, [r3, #5]
 80003d8:	461a      	mov	r2, r3
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	791b      	ldrb	r3, [r3, #4]
 80003de:	005b      	lsls	r3, r3, #1
 80003e0:	fa02 f303 	lsl.w	r3, r2, r3
 80003e4:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	681a      	ldr	r2, [r3, #0]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	791b      	ldrb	r3, [r3, #4]
 80003f0:	005b      	lsls	r3, r3, #1
 80003f2:	2103      	movs	r1, #3
 80003f4:	fa01 f303 	lsl.w	r3, r1, r3
 80003f8:	43db      	mvns	r3, r3
 80003fa:	4619      	mov	r1, r3
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	400a      	ands	r2, r1
 8000402:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	6819      	ldr	r1, [r3, #0]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	68fa      	ldr	r2, [r7, #12]
 8000410:	430a      	orrs	r2, r1
 8000412:	601a      	str	r2, [r3, #0]
	{

	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	799b      	ldrb	r3, [r3, #6]
 8000418:	461a      	mov	r2, r3
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	791b      	ldrb	r3, [r3, #4]
 800041e:	005b      	lsls	r3, r3, #1
 8000420:	fa02 f303 	lsl.w	r3, r2, r3
 8000424:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	689a      	ldr	r2, [r3, #8]
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	791b      	ldrb	r3, [r3, #4]
 8000430:	005b      	lsls	r3, r3, #1
 8000432:	2103      	movs	r1, #3
 8000434:	fa01 f303 	lsl.w	r3, r1, r3
 8000438:	43db      	mvns	r3, r3
 800043a:	4619      	mov	r1, r3
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	400a      	ands	r2, r1
 8000442:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	6899      	ldr	r1, [r3, #8]
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	68fa      	ldr	r2, [r7, #12]
 8000450:	430a      	orrs	r2, r1
 8000452:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	79db      	ldrb	r3, [r3, #7]
 8000458:	461a      	mov	r2, r3
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	791b      	ldrb	r3, [r3, #4]
 800045e:	005b      	lsls	r3, r3, #1
 8000460:	fa02 f303 	lsl.w	r3, r2, r3
 8000464:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	68da      	ldr	r2, [r3, #12]
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	791b      	ldrb	r3, [r3, #4]
 8000470:	005b      	lsls	r3, r3, #1
 8000472:	2103      	movs	r1, #3
 8000474:	fa01 f303 	lsl.w	r3, r1, r3
 8000478:	43db      	mvns	r3, r3
 800047a:	4619      	mov	r1, r3
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	400a      	ands	r2, r1
 8000482:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	68d9      	ldr	r1, [r3, #12]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	68fa      	ldr	r2, [r7, #12]
 8000490:	430a      	orrs	r2, r1
 8000492:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	7a1b      	ldrb	r3, [r3, #8]
 8000498:	461a      	mov	r2, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	791b      	ldrb	r3, [r3, #4]
 800049e:	fa02 f303 	lsl.w	r3, r2, r3
 80004a2:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	685a      	ldr	r2, [r3, #4]
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	4619      	mov	r1, r3
 80004b0:	2301      	movs	r3, #1
 80004b2:	408b      	lsls	r3, r1
 80004b4:	43db      	mvns	r3, r3
 80004b6:	4619      	mov	r1, r3
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	400a      	ands	r2, r1
 80004be:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	6859      	ldr	r1, [r3, #4]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	68fa      	ldr	r2, [r7, #12]
 80004cc:	430a      	orrs	r2, r1
 80004ce:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	795b      	ldrb	r3, [r3, #5]
 80004d4:	2b02      	cmp	r3, #2
 80004d6:	d131      	bne.n	800053c <GPIO_Init+0x188>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	791b      	ldrb	r3, [r3, #4]
 80004dc:	08db      	lsrs	r3, r3, #3
 80004de:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	791b      	ldrb	r3, [r3, #4]
 80004e4:	f003 0307 	and.w	r3, r3, #7
 80004e8:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	7afa      	ldrb	r2, [r7, #11]
 80004f0:	3208      	adds	r2, #8
 80004f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004f6:	7abb      	ldrb	r3, [r7, #10]
 80004f8:	009b      	lsls	r3, r3, #2
 80004fa:	220f      	movs	r2, #15
 80004fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000500:	43db      	mvns	r3, r3
 8000502:	4618      	mov	r0, r3
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	7afa      	ldrb	r2, [r7, #11]
 800050a:	4001      	ands	r1, r0
 800050c:	3208      	adds	r2, #8
 800050e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	7afa      	ldrb	r2, [r7, #11]
 8000518:	3208      	adds	r2, #8
 800051a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	7a5b      	ldrb	r3, [r3, #9]
 8000522:	461a      	mov	r2, r3
 8000524:	7abb      	ldrb	r3, [r7, #10]
 8000526:	009b      	lsls	r3, r3, #2
 8000528:	fa02 f303 	lsl.w	r3, r2, r3
 800052c:	4618      	mov	r0, r3
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	7afa      	ldrb	r2, [r7, #11]
 8000534:	4301      	orrs	r1, r0
 8000536:	3208      	adds	r2, #8
 8000538:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 800053c:	bf00      	nop
 800053e:	3710      	adds	r7, #16
 8000540:	46bd      	mov	sp, r7
 8000542:	bd80      	pop	{r7, pc}

08000544 <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000544:	b480      	push	{r7}
 8000546:	b083      	sub	sp, #12
 8000548:	af00      	add	r7, sp, #0
 800054a:	6078      	str	r0, [r7, #4]
 800054c:	460b      	mov	r3, r1
 800054e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	695b      	ldr	r3, [r3, #20]
 8000554:	78fa      	ldrb	r2, [r7, #3]
 8000556:	2101      	movs	r1, #1
 8000558:	fa01 f202 	lsl.w	r2, r1, r2
 800055c:	405a      	eors	r2, r3
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	615a      	str	r2, [r3, #20]
}
 8000562:	bf00      	nop
 8000564:	370c      	adds	r7, #12
 8000566:	46bd      	mov	sp, r7
 8000568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056c:	4770      	bx	lr
	...

08000570 <__libc_init_array>:
 8000570:	b570      	push	{r4, r5, r6, lr}
 8000572:	4d0d      	ldr	r5, [pc, #52]	; (80005a8 <__libc_init_array+0x38>)
 8000574:	4c0d      	ldr	r4, [pc, #52]	; (80005ac <__libc_init_array+0x3c>)
 8000576:	1b64      	subs	r4, r4, r5
 8000578:	10a4      	asrs	r4, r4, #2
 800057a:	2600      	movs	r6, #0
 800057c:	42a6      	cmp	r6, r4
 800057e:	d109      	bne.n	8000594 <__libc_init_array+0x24>
 8000580:	4d0b      	ldr	r5, [pc, #44]	; (80005b0 <__libc_init_array+0x40>)
 8000582:	4c0c      	ldr	r4, [pc, #48]	; (80005b4 <__libc_init_array+0x44>)
 8000584:	f000 f818 	bl	80005b8 <_init>
 8000588:	1b64      	subs	r4, r4, r5
 800058a:	10a4      	asrs	r4, r4, #2
 800058c:	2600      	movs	r6, #0
 800058e:	42a6      	cmp	r6, r4
 8000590:	d105      	bne.n	800059e <__libc_init_array+0x2e>
 8000592:	bd70      	pop	{r4, r5, r6, pc}
 8000594:	f855 3b04 	ldr.w	r3, [r5], #4
 8000598:	4798      	blx	r3
 800059a:	3601      	adds	r6, #1
 800059c:	e7ee      	b.n	800057c <__libc_init_array+0xc>
 800059e:	f855 3b04 	ldr.w	r3, [r5], #4
 80005a2:	4798      	blx	r3
 80005a4:	3601      	adds	r6, #1
 80005a6:	e7f2      	b.n	800058e <__libc_init_array+0x1e>
 80005a8:	080005d0 	.word	0x080005d0
 80005ac:	080005d0 	.word	0x080005d0
 80005b0:	080005d0 	.word	0x080005d0
 80005b4:	080005d4 	.word	0x080005d4

080005b8 <_init>:
 80005b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ba:	bf00      	nop
 80005bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005be:	bc08      	pop	{r3}
 80005c0:	469e      	mov	lr, r3
 80005c2:	4770      	bx	lr

080005c4 <_fini>:
 80005c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005c6:	bf00      	nop
 80005c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ca:	bc08      	pop	{r3}
 80005cc:	469e      	mov	lr, r3
 80005ce:	4770      	bx	lr
